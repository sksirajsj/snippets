<snippet>
	<content><![CDATA[
//K4(ON(SO3)2)2 -> K4N2O14S4 
string MolecularFormula(string s)
{
    stack<pair<string,ll>> st;
    ll n = s.size();
    for(ll i=0;i<n;i++)
    {
        if(s[i]=='(')
            st.push({"(",-1});
        else if(s[i]>='A' and s[i]<='Z')
        {
            string atom = "";
            atom+=s[i];
            //finding Mg kind guys
            while((i+1)<n and s[i+1]>='a' and s[i+1]<='z')
            {
                atom+=s[i+1];
                i++;
            }
            ll cnt = 0;
            //finding count of atom say like N23
            //cnt = 23
            while((i+1)<n and s[i+1]>='0' and s[i+1]<='9')
            {
                cnt*=10;
                cnt += s[i+1]-'0';
                i++;
            }
            if(cnt==0)cnt=1;
            st.push({atom,cnt});
        }
        else if(s[i]==')')
        {
            ll mult = 0;
            //finding int val after )
            while((i+1)<n and s[i+1]>='0' and s[i+1]<='9')
            {
                mult*=10;
                mult+=(s[i+1]-'0');
                i++;
            }
            if(mult==0)mult=1;
            stack<pair<string,ll>> temp;
            while(!st.empty())
            {
                auto it = st.top();
                st.pop();
                if(it.first=="(")
                    break;
                temp.push({it.first,mult*it.second});
            }

            while(!temp.empty())
            {
                auto it = temp.top();
                temp.pop();
                st.push(it);
            }
        }
    }
    map<string,ll> mp;
    while(!st.empty())
    {
        auto it = st.top();
        st.pop();
        mp[it.first]+=it.second;
    }
    string ans="";
    for(auto i:mp)
    {
        ans+=i.first;
        //if it is 1..need not add count to ans
        if(i.second>1)
            ans+=to_string(i.second);
    }
    return ans;
}
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>MOLECULARFORMULA</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.c++</scope>
</snippet>
