<snippet>
	<content><![CDATA[
#include<bits/stdc++.h> 
using namespace std;


#define fast ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL)
#define MOD 1000000007
#define MOD1 998244353
#define vin(v,k) fo(i,k)cin>>a,v.pb(a);
#define INF 1e18
#define nline "\n"
#define pb push_back
#define ppb pop_back
#define makep make_pair
#define ff first
#define ss second
#define PI 3.141592653589793238462
#define set_bits __builtin_popcountll
#define all(x) (x).begin(), (x).end()
#define siz 2000010
 
typedef long long ll;
typedef unsigned long long ull;
typedef long double lld;
 
 
 
#define debug(x) cout << #x <<" "; _print(x); cout << endl;

void _print(ll t) {cout << t;}
void _print(int t) {cout << t;}
void _print(string t) {cout << t;}
void _print(char t) {cout << t;}
void _print(lld t) {cout << t;}
void _print(double t) {cout << t;}
void _print(ull t) {cout << t;}
 
template <class T, class V> void _print(pair <T, V> p);
template <class T> void _print(vector <T> v);
template <class T> void _print(set <T> v);
template <class T, class V> void _print(map <T, V> v);
template <class T> void _print(multiset <T> v);
template <class T, class V> void _print(pair <T, V> p) {cout << "{"; _print(p.ff); cout << ","; _print(p.ss); cout << "}";}
template <class T> void _print(vector <T> v) {cout << "[ "; for (T i : v) {_print(i); cout << " ";} cout << "]";}
template <class T> void _print(set <T> v) {cout << "[ "; for (T i : v) {_print(i); cout << " ";} cout << "]";}
template <class T> void _print(multiset <T> v) {cout << "[ "; for (T i : v) {_print(i); cout << " ";} cout << "]";}
template <class T, class V> void _print(map <T, V> v) {cout << "[ "; for (auto i : v) {_print(i); cout << " ";} cout << "]";}
 
template<class T>void _print(vector<vector<T>> v){cout<<"\n";for(auto i:v){for(auto j:i){cout<<j<<" ";}cout<<"\n";}}



void solve() {
    ll n,m,a,b,c,x,y,z;
    ll ans=0,val=0,cnt=0;
    cin>>n;
    vector<ll> v;
    for(ll i=0;i<n;i++) {
        cin>>a;
        v.pb(a);
    }
}





int main() {
    fast;
    ll t;
    /*cin>>t;
    while(t--)*/
    solve();
}
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>TEMPLATE</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.c++</scope>
</snippet>
