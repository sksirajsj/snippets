<snippet>
	<content><![CDATA[
void next_greater(vector<ll> w)
{
    ll n = w.size();
    vector<ll> v(n+2);
    v[0]=INF;
    v[n+1]=INF;
    for(ll i=1;i<=n;i++)
    {
        v[i]=w[i-1];
    }

    stack<ll> st;
    vector<ll> left(n+2),right(n+2);
    st.push(0);
    for(ll i=1;i<=n;i++)
    {
        while(!st.empty() and v[st.top()]<=v[i])
            st.pop();
        left[i] = st.top();
        st.push(i);
    }

    while(!st.empty())
        st.pop();

    st.push(n+1);
    for(ll i=n;i>=1;i--)
    {
        while(!st.empty() and v[st.top()]<=v[i])
            st.pop();
        right[i] = st.top();
        st.push(i);
    }
    debug(left)
    debug(right)
    ll ans=0;
    for(ll i=1;i<=n;i++)
    {
        ans+=(v[i])*(i-left[i])*(right[i]-i);
    }
    cout<<ans<<"\n";
}
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>NEXTGREATER</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.c++</scope>
</snippet>
