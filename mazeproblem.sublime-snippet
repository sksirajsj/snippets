<snippet>
	<content><![CDATA[
vector<string> allpaths;
string s;


bool check(vector<vector<int>> &m,int x,int y,int n,vector<vector<int>> &vis){
    if((x>=0 and x<n) and (y>=0 and y<n) and (m[x][y]==1) and vis[x][y]==0)
        return true;
    return false;
}

void rec(vector<vector<int>> &m,int x,int y,int n,vector<vector<int>> &vis){
    
    if(m[x][y]==0)return;//only for (0,0) check!..corner case
    vis[x][y] = 1;
    
    if(x==(n-1) and y==(n-1)){
        allpaths.push_back(s);
        vis[x][y] = 0;
        return;
    }
    
    
    
    //DLRU...so that u get sorted answer

    if(check(m,x+1,y,n,vis)){
        s+='D';
        rec(m,x+1,y,n,vis);
        s.pop_back();
    }
    

    if(check(m,x,y-1,n,vis)){
        s+='L';
        rec(m,x,y-1,n,vis);
        s.pop_back();
    }
    
    if(check(m,x,y+1,n,vis)){
        s+='R';
        rec(m,x,y+1,n,vis);
        s.pop_back();
    }

    
    if(check(m,x-1,y,n,vis)){
        s+='U';
        rec(m,x-1,y,n,vis);
        s.pop_back();
    }
  
    vis[x][y] = 0;
    
    
}
vector<string> findPath(vector<vector<int>> &m, int n) {
    vector<vector<int>> vis(n,vector<int>(n,0));
    rec(m,0,0,n,vis);
    return allpaths;
}
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>MAZEPROBLEM</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.c++</scope>
</snippet>
